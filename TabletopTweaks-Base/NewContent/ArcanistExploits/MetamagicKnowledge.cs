using Kingmaker.Blueprints.Classes;
using Kingmaker.Blueprints.Classes.Selection;
using TabletopTweaks.Core.Utilities;
using static TabletopTweaks.Base.Main;

namespace TabletopTweaks.Base.NewContent.ArcanistExploits {
    static class MetamagicKnowledge {
        public static void AddMetamagicKnowledge() {
            var ArcanistGreaterExploitsFeature = BlueprintTools.GetBlueprint<BlueprintFeature>("c7536b93f17c70d4fa3a8cf9aa76bfb7");

            var ArcanistExploitMetamagicKnowledge = Helpers.CreateBlueprint<BlueprintFeatureSelection>(TTTContext, "ArcanistExploitMetamagicKnowledge", bp => {
                bp.SetName(TTTContext, "Metamagic Knowledge");
                bp.SetDescription(TTTContext, "The arcanist can select one metamagic feat as a bonus feat. She must meet the prerequisites of this feat.");
                bp.AddFeatures(FeatTools.GetMetamagicFeats());
                bp.Mode = SelectionMode.OnlyNew;
                bp.Groups = new FeatureGroup[] { FeatureGroup.ArcanistExploit };
                bp.IsClassFeature = true;
            });
            var ArcanistExploitMetamagicKnowledgeGreater = Helpers.CreateBlueprint<BlueprintFeatureSelection>(TTTContext, "ArcanistExploitMetamagicKnowledgeGreater", bp => {
                bp.SetName(TTTContext, "Greater Metamagic Knowledge");
                bp.SetDescription(TTTContext, "The arcanist can select one metamagic feat as a bonus feat. She must meet the prerequisites of this feat.");
                bp.AddFeatures(FeatTools.GetMetamagicFeats());
                bp.Mode = SelectionMode.OnlyNew;
                bp.Groups = new FeatureGroup[] { FeatureGroup.ArcanistExploit };
                bp.IsClassFeature = true;
                bp.AddPrerequisiteFeature(ArcanistExploitMetamagicKnowledge);
                bp.AddPrerequisiteFeature(ArcanistGreaterExploitsFeature);

            });
            if (TTTContext.AddedContent.ArcanistExploits.IsDisabled("MetamagicKnowledge")) { return; }
            FeatTools.AddAsArcanistExploit(ArcanistExploitMetamagicKnowledge);
            FeatTools.AddAsArcanistExploit(ArcanistExploitMetamagicKnowledgeGreater);
        }
    }
}